{"version":3,"sources":["../node_modules/mongodb/lib/core sync","db/dbService.js","db/index.js","../node_modules/mongodb/lib/core/connection sync","db/skillsDb.js","db/user.js","components/Addskill.js","components/SkillsList.js","components/HomePage.js","components/EditSkill.js","components/Login/index.js","components/Register/index.js","App.js","serviceWorker.js","index.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","require","skills","user","name","description","goals","a","create","createdSkill","skillId","changeDescription","skill","changeGoals","remove","username","password","createdUser","fetchPerson","fetchedUser","createSkill","updateDescription","updateGoals","deleteSkill","createUser","fetchUser","MongoClient","makeSkillsDb","makeUserDb","makeDb","connect","useNewUrlParser","useUnifiedTopology","client","console","log","db","Object","freeze","ObjectID","exists","get","changeName","getConnection","collection","insertOne","inserted","findOne","found","find","_id","updateOne","$set","updated","skill_id","deleteOne","removed","userId","deleted","Addskill","props","onSubmit","z","type","value","cr","placeholder","onChange","y","className","SkillsList","renderSkill","x","onClick","goToManage","toggleState","del","index","isEdit","state","setState","handleManage","updateSkillItem","preventDefault","editt","input","renderUpdateFrom","ref","v","defaultValue","this","Component","HomePage","current","updateSkill","target","addNewSkill","crr","sk","push","i","skls","splice","editSkill","newval","sklls","history","pathname","skillsList","map","class","length","EditSkill","useState","checked","handleChecked","isChecked","setCheck","setChecker","handleCheckedBox","percentage","Math","round","location","style","width","height","text","Login","useHistory","action","for","required","Register","setUserName","setPassword","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.61f08746.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 167;","const {skills, user} = require('./index');\n\n\n\n//define db functions\n//create a skill\nasync function createSkill(name, description, goals){\n    let createdSkill = await skills.create({name, description, goals})\n    return createdSkill;\n}\n\nasync function updateDescription(skillId, description){\n    let skill = await skills.changeDescription(skillId, description);\n    return skill\n}\nasync function updateGoals(skillId, goals){\n    let skill = await skills.changeGoals(skillId, goals);\n    return skill\n}\nasync function deleteSkill(skillId){\n    let skill = await skills.remove(skillId);\n    return skill\n}\nasync function createUser(username, password){\n    let createdUser = await user.create(username, password)\n    return createdUser;\n}\n\nasync function fetchUser(username){\n    let fetchedUser = await user.fetchPerson(username)\n    return fetchedUser\n}\n\nmodule.exports = {\n    createSkill, \n    updateDescription,\n    updateGoals,\n    deleteSkill,\n    createUser,\n    fetchUser\n}","const MongoClient = require('mongodb').MongoClient;\nconst makeSkillsDb = require('./skillsDb');\nconst makeUserDb = require('./user');\n\n\n\nasync function makeDb(){\n\n    const url = \"mongodb://localhost:27017\"\n    const client = await MongoClient.connect(url, {useNewUrlParser: true, useUnifiedTopology: true})\n    console.log(client)\n    const db = client.db('skillsapp')\n    console.log(\"db\", db)\n    return db   \n}\n\nconst skills = makeSkillsDb(makeDb);\nconst user = makeUserDb(makeDb);\n\nmodule.exports = Object.freeze({skills, user})","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 383;","const { ObjectID } = require('mongodb');\n\n\n\nmodule.exports = (makeDb) => {\n    return Object.freeze({\n        create, \n        exists,\n        remove,\n        get,\n        changeName,\n        changeDescription,\n        changeGoals\n    })\n\n\n\n    //create a new skill\n    async function create(skill){\n        const collection = await getConnection()\n\n        const inserted = await collection.insertOne(skill)\n\n        return !!inserted\n    }\n\n    //find a skill\n    async function exists(name){\n        const collection = await getConnection()\n\n        const found = await collection.findOne({name})\n\n        return !!found;\n    }\n\n    async function get(skillId){\n        \n        const collection = await getConnection()\n\n        const found = await collection.find({_id: ObjectID(skillId)});\n\n        return found;\n    }\n\n\n\n    //update a skill name\n    async function changeName(skillId, name){\n\n        const collection = await getConnection();\n\n        const updated = await collection.updateOne({_id: ObjectID(skillId)}, {$set: {name: name}})\n\n        return !!updated\n    }\n     \n    \n    //update a skill description\n    async function changeDescription(skillId, description){\n\n        const collection = await getConnection();\n\n        const updated = await collection.updateOne({_id: ObjectID(skillId)}, {$set: {description: description}})\n\n        return !!updated\n    }\n\n    //update a skill goal\n    async function changeGoals(skillId, goals){\n\n        const collection = await getConnection();\n\n        const updated = await collection.updateOne({_id: ObjectID(skillId)}, {$set: {goals: goals}})\n\n        return !!updated\n\n    }\n\n    //delete a skill\n    async function remove(skill_id){\n        const collection = await getConnection()\n\n        const removed = await collection.deleteOne({_id: ObjectID(skill_id)})\n\n        return !!removed;\n    }\n    \n\n    //db function receive\n\n    async function getConnection(){\n        const db = await makeDb();\n        const collection = db.collection('product')\n\n        return collection\n    }\n\n}\n\n\n","const { ObjectID } = require(\"bson\")\n\nmodule.exports = (makeDb) => {\n    return Object.freeze({\n        create,\n        exists,\n        remove,\n        fetchPerson\n    })\n\n\n\n//create new user\nasync function create(user){\n    const collection = await getConnection()\n    const inserted = await collection.insertOne(user)\n    return !!inserted\n}\n\n\n\nasync function exists(userId){\n\n    const collection = await getConnection()\n\n    const found = await collection.findOne({_id: ObjectID(userId)})\n\n    return !!found\n}\n\n//return user with id\nasync function fetchPerson(username){\n\n    const collection = await getConnection()\n\n    const found = await collection.findOne({username: username})\n    return found\n}\n\n//remove a user based on their id\nasync function remove(userId){\n    const collection = await getConnection()\n\n    const deleted = await collection.deleteOne({userId: ObjectID(userId)})\n\n    return !!deleted\n}\n\n//get db connection\nasync function getConnection(){\n    const db = await makeDb();\n    const collection = db.collection('users');\n    return collection\n}   \n}","import React from 'react'\r\n\r\nconst Addskill = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.z}>\r\n                <input type=\"text\" value={props.cr} placeholder=\"Add new skill\" onChange={props.y} className=\"inputskill\" />\r\n                <button className=\"btn btnskill\">Add Skill</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default Addskill","import React, {Component, Fragment} from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nclass SkillsList extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state={\r\n            isEdit : false\r\n        }\r\n    }\r\n    \r\n    renderSkill = () =>{\r\n        \r\n        return(\r\n        <li className=\"skillname\">\r\n            <span>{this.props.x.name}</span>\r\n            <button className=\"btn editbtn\" onClick={() => {this.goToManage()}}>Manage</button>\r\n            <button className=\"btn editbtn\" onClick={() => {this.toggleState()}}>Edit</button>\r\n            <button className=\"btn deletebtn\" onClick={() => {this.props.del(this.props.index)}}>Delete</button>\r\n         </li>\r\n        )\r\n    }\r\n    \r\n    //toggle \r\n    toggleState = () =>{\r\n        let {isEdit} = this.state;\r\n        this.setState({\r\n            isEdit: !isEdit\r\n        })\r\n    }\r\n    goToManage = () => {\r\n        console.log(\"Name\", this.props.x.name)\r\n        this.props.handleManage(this.props.x.name);\r\n    }\r\n    updateSkillItem = (e) =>{\r\n        e.preventDefault();\r\n        this.props.editt(this.props.index, this.input.value);\r\n        this.toggleState();\r\n    }\r\n    //updateForm\r\n    renderUpdateFrom = () =>{\r\n        return(\r\n            <form onSubmit={this.updateSkillItem} className=\"updateForm\">\r\n                <input type=\"text\" ref={(v) => {this.input = v}} defaultValue={this.props.x.name} className=\"inputUpdate\" />\r\n                <button className=\"btn updatebtn\">Update</button>\r\n            </form>\r\n        )\r\n    }\r\n    render(){\r\n        let {isEdit} = this.state\r\n        return (\r\n            <Fragment> \r\n                \r\n                {isEdit ? this.renderUpdateFrom() : this.renderSkill()}\r\n            </Fragment>\r\n          );\r\n    }\r\n  \r\n}\r\n\r\n\r\nexport default SkillsList\r\n","import React, {Component} from 'react' \nimport Addskill from './Addskill'\nimport SkillsList from './SkillsList'\nimport './homepage.scss';\n\nclass HomePage extends Component {\n  state={\n    skills:[\n    \n    ],\n    current: '',\n \n  }\n\n  //updateSkill (track the new typed skill)\n  updateSkill = (e) =>{\n    e.preventDefault();\n    this.setState({\n        current: e.target.value //input value\n      })\n  }\n\n  //AddNewSkill\n  addNewSkill = (e) => {\n    e.preventDefault();\n   let crr = this.state.current;\n   let sk = this.state.skills;\n   sk.push({name:crr})\n   this.setState({\n    skills: sk,\n    current: ''\n   })\n  }\n\n  //deleteCourse\n\n  deleteSkill = (i) => {\n    //console.log(i);\n    let skls = this.state.skills;\n    skls.splice(i, 1); //remove\n    this.setState({\n      skills: skls\n    })\n  }\n\n  //editSkill\n  editSkill = (i, newval) =>{\n    let sklls = this.state.skills;\n    let skl = sklls[i];\n    skl['name']= newval;\n    this.setState({\n      skills: sklls\n    })\n  }\n\n  handleManage = (name) => {\n    console.log(\"Name 2\",name)\n    this.props.history.push({pathname: '/edit', state: {name: name}})\n  }\n\n  render(){\n    const skillsList = this.state.skills.map((skill, i) => {\n      return <SkillsList x={skill} key={i} index={i} del={this.deleteSkill} editt={this.editSkill} handleManage={this.handleManage} />\n    })\n\n    return (\n      <div className=\"App\">\n        <h2 className=\"heading\">Welcome Mnyambura! <br/>&nbsp;<span class=\"fas fa-bahai awsome\"></span>Manage Your Skills&nbsp;<span class=\"fas fa-bahai awsome\"></span></h2>\n        <Addskill y={this.updateSkill} z={this.addNewSkill} cr={this.state.current}/>\n        <div className=\"current\">\n      \n        { this.state.skills.length === 0 ?\n          \n          <p className=\"currentp\"> You have no current skills added. </p>\n         : \n         <>\n         <p className=\"currentp\"> Your Current Skills: </p>\n          <ul className=\"skillList\"> <li> {skillsList} </li> </ul> \n          </>\n          } \n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, {useState} from  'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../App.scss';\nimport './homepage.scss';\n\nfunction EditSkill(props){\n    let [checked, handleChecked] = useState(0);\n    let [isChecked, setCheck] = useState(false);\n    let setChecker = () =>{\n        setCheck(!isChecked);\n        handleCheckedBox()\n    }\n    let handleCheckedBox = () => {\n        handleChecked(checked+1)\n    }\n\n\n    let percentage = Math.round(((checked/5) * 100), 1);\n    return(\n        <div>\n            <h2 className=\"heading\"><span class=\"fas fa-bahai awsome\"></span>Edit {props.history.location.state.name}</h2>\n            <div className=\"progressbar\" style={{ width: 200, height: 200 }}>\n                <CircularProgressbar value={percentage} text={`${percentage}%`} />;\n            </div>\n            <div className=\"container box columns\">\n                <div className=\"column\">\n                    <ol className=\"list\">\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker} /></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        \n                    </ol>\n                </div>\n                <div className=\"column\">\n                        <h1>Describe your skill</h1>\n                        <div class=\"control\">\n                            <textarea class=\"textarea\" placeholder=\"Skill Description\"></textarea>\n                        </div>\n                        <button class=\"button is-success\"   >Save</button>\n                </div>\n\n               \n            \n            </div>\n        </div>\n    )\n}\n\nexport default EditSkill;","import React from 'react';\nimport { useHistory } from 'react-router';\nimport './index.scss';\n\nfunction Login(){\n    const history = useHistory();\n    const goToHome = () =>{\n        history.push('/homepage')\n    }\n    const goToRegister = () =>{\n        history.push('/register')\n    }\n    return(<div>\n\n\n<section class=\"hero is-primary is-fullheight\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"columns is-centered\">\n        <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n          <form action=\"\" class=\"box\">\n          <h1 className=\"title title-login\">Login</h1>   \n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Username</label>\n              <div class=\"control has-icons-left\">\n                <input type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" class=\"input\" required/>\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-envelope\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Password</label>\n              <div class=\"control has-icons-left\">\n                <input type=\"password\" placeholder=\"*******\" class=\"input\" required/>\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-lock\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label for=\"\" class=\"checkbox\">\n                <input type=\"checkbox\"/>\n               Remember me\n              </label>\n            </div>\n            <div class=\"field\">\n              <button class=\"button is-success\" onClick={goToHome}>\n                Login\n              </button>\n              <button class=\"button is-success\" onClick={goToRegister}>\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n    </div>)\n}\n\nexport default Login;","import React, {useState} from 'react';\nimport { useHistory } from 'react-router';\nimport './index.scss';\nconst {createUser} = require('../../db/dbService');\n\nfunction Register(){\n    const history = useHistory();\n\n    let [username, setUserName] = useState('')\n    let [password, setPassword] = useState('')\n\n\n    const handleUserName = (e) => {\n        setUserName(e.target.value)\n    }\n\n    const handlePassword = (e) => {\n        setPassword(e.target.value)\n    }\n\n    const handleLogin = () => {\n        history.push('/');\n    }\n    async function handleRegInfo(regInfo){\n        const payload = {'username': username, 'password':password}\n        console.log(payload)\n        const user = await createUser(payload);\n        console.log(user)\n        return user;\n    }\n    return(\n        <div className=\"register\">\n            <section class=\"hero is-primary is-fullheight\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"columns is-centered\">\n        <div class=\"column register-area  is-5-tablet is-4-desktop is-3-widescreen\">\n            \n          <form action=\"\" class=\"box\">\n          <h1 className=\"title title-reg\">Register</h1>   \n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Email</label>\n              <div class=\"control has-icons-left\">\n                <input type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" class=\"input\" value={username} onChange={handleUserName} required/>\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-envelope\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Password</label>\n              <div class=\"control has-icons-left\">\n                <input type=\"password\" placeholder=\"*******\" class=\"input\" value={password} onChange={handlePassword} required/>\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-lock\"></i>\n                </span>\n              </div>\n            </div>\n         \n            <div class=\"field\">\n              <button class=\"button is-success btn-register\" onClick={handleLogin}>\n                Register\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n        </div>\n    )\n}\n\nexport default Register;","import React, {Component} from 'react' \nimport './App.scss';\nimport HomePage from './components/HomePage';\nimport EditSkill from './components/EditSkill';\nimport {BrowserRouter,Switch , Route} from 'react-router-dom'\nimport Login from './components/Login';\nimport Register from './components/Register';\nclass App extends Component {\n \n  render(){\n    return (\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login}/>\n            <Route exact path='/homepage' component={HomePage}/>\n            <Route exact path='/edit' component={EditSkill}/>\n            <Route exact path=\"/register\" component={Register}/>\n          </Switch>\n        </BrowserRouter>\n      \n  \n      \n    );\n  }\n}\n\nexport default App;\n ","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}