{"version":3,"sources":["components/Addskill.js","components/SkillsList.js","components/HomePage.js","components/EditSkill.js","components/Login/index.js","App.js","serviceWorker.js","index.js"],"names":["Addskill","props","onSubmit","z","type","value","cr","placeholder","onChange","y","className","SkillsList","renderSkill","x","name","onClick","goToManage","toggleState","del","index","isEdit","state","setState","console","log","handleManage","updateSkillItem","e","preventDefault","editt","input","renderUpdateFrom","ref","v","defaultValue","this","Component","HomePage","skills","current","updateSkill","target","addNewSkill","crr","sk","push","deleteSkill","i","skls","splice","editSkill","newval","sklls","history","pathname","skillsList","map","skill","class","length","EditSkill","useState","checked","handleChecked","isChecked","setCheck","setChecker","handleCheckedBox","percentage","Math","round","location","style","width","height","text","Login","useHistory","action","for","required","App","exact","path","component","Boolean","window","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.19c37a60.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Addskill = (props) =>{\r\n\r\n    return (\r\n            <form onSubmit={props.z}>\r\n                <input type=\"text\" value={props.cr} placeholder=\"Add new skill\" onChange={props.y} className=\"inputskill\" />\r\n                <button className=\"btn btnskill\">Add Skill</button>\r\n            </form>\r\n    )\r\n}\r\n\r\nexport default Addskill","import React, {Component, Fragment} from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nclass SkillsList extends Component{\r\n    \r\n    constructor(props){\r\n        super(props);\r\n        console.log(props);\r\n        this.state={\r\n            isEdit : false\r\n        }\r\n    }\r\n    \r\n    renderSkill = () =>{\r\n        \r\n        return(\r\n        <li className=\"skillname\">\r\n            <span>{this.props.x.name}</span>\r\n            <button className=\"btn editbtn\" onClick={() => {this.goToManage()}}>Manage</button>\r\n            <button className=\"btn editbtn\" onClick={() => {this.toggleState()}}>Edit</button>\r\n            <button className=\"btn deletebtn\" onClick={() => {this.props.del(this.props.index)}}>Delete</button>\r\n         </li>\r\n        )\r\n    }\r\n    \r\n    //toggle \r\n    toggleState = () =>{\r\n        let {isEdit} = this.state;\r\n        this.setState({\r\n            isEdit: !isEdit\r\n        })\r\n    }\r\n    goToManage = () => {\r\n        console.log(\"Name\", this.props.x.name)\r\n        this.props.handleManage(this.props.x.name);\r\n    }\r\n    updateSkillItem = (e) =>{\r\n        e.preventDefault();\r\n        this.props.editt(this.props.index, this.input.value);\r\n        this.toggleState();\r\n    }\r\n    //updateForm\r\n    renderUpdateFrom = () =>{\r\n        return(\r\n            <form onSubmit={this.updateSkillItem} className=\"updateForm\">\r\n                <input type=\"text\" ref={(v) => {this.input = v}} defaultValue={this.props.x.name} className=\"inputUpdate\" />\r\n                <button className=\"btn updatebtn\">Update</button>\r\n            </form>\r\n        )\r\n    }\r\n    render(){\r\n        let {isEdit} = this.state\r\n        return (\r\n            <Fragment> \r\n                \r\n                {isEdit ? this.renderUpdateFrom() : this.renderSkill()}\r\n            </Fragment>\r\n          );\r\n    }\r\n  \r\n}\r\n\r\n\r\nexport default SkillsList\r\n","import React, {Component} from 'react' \nimport Addskill from './Addskill'\nimport SkillsList from './SkillsList'\nimport './homepage.scss';\n\nclass HomePage extends Component {\n  state={\n    skills:[\n    \n    ],\n    current: '',\n    name: ''\n  }\n\n  //updateSkill (track the new typed skill)\n  updateSkill = (e) =>{\n    e.preventDefault();\n    this.setState({\n        current: e.target.value //input value\n      })\n  }\n\n  //AddNewSkill\n  addNewSkill = (e) => {\n    e.preventDefault();\n   let crr = this.state.current;\n   let sk = this.state.skills;\n   sk.push({name:crr})\n   this.setState({\n    skills: sk,\n    current: ''\n   })\n  }\n\n  //deleteCourse\n\n  deleteSkill = (i) => {\n    //console.log(i);\n    let skls = this.state.skills;\n    skls.splice(i, 1); //remove\n    this.setState({\n      skills: skls\n    })\n  }\n\n  //editSkill\n  editSkill = (i, newval) =>{\n    let sklls = this.state.skills;\n    let skl = sklls[i];\n    skl['name']= newval;\n    this.setState({\n      skills: sklls\n    })\n  }\n\n  handleManage = (name) => {\n    console.log(\"Name 2\",name)\n    this.props.history.push({pathname: '/edit', state: {name: name}})\n  }\n\n  render(){\n    const skillsList = this.state.skills.map((skill, i) => {\n      return <SkillsList x={skill} key={i} index={i} del={this.deleteSkill} editt={this.editSkill} handleManage={this.handleManage} />\n    })\n    return (\n      <div className=\"App\">\n        <h2 className=\"heading\"><span class=\"fas fa-bahai awsome\"></span>Manage Your Skills</h2>\n        <Addskill y={this.updateSkill} z={this.addNewSkill} cr={this.state.current}/>\n        <div className=\"current\">\n      \n        { this.state.skills.length === 0 ?\n          \n          <p className=\"currentp\"> You have no current skills added. </p>\n         : \n         <>\n         <p className=\"currentp\"> Your Current Skills: </p>\n          <ul className=\"skillList\"> <li> {skillsList} </li> </ul> \n          </>\n          } \n        </div>\n\n      </div>\n    );\n  }\n}\n\nexport default HomePage;\n","import React, {useState} from  'react';\nimport { CircularProgressbar } from 'react-circular-progressbar';\nimport 'react-circular-progressbar/dist/styles.css';\nimport '../App.scss';\nimport './homepage.scss';\n\nfunction EditSkill(props){\n    let [checked, handleChecked] = useState(0);\n    let [isChecked, setCheck] = useState(false);\n    let setChecker = () =>{\n        setCheck(!isChecked);\n        handleCheckedBox()\n    }\n    let handleCheckedBox = () => {\n        handleChecked(checked+1)\n    }\n\n\n    let percentage = Math.round(((checked/5) * 100), 1);\n    return(\n        <div>\n            <h2 className=\"heading\"><span class=\"fas fa-bahai awsome\"></span>Edit {props.history.location.state.name}</h2>\n            <div className=\"progressbar\" style={{ width: 200, height: 200 }}>\n                <CircularProgressbar value={percentage} text={`${percentage}%`} />;\n            </div>\n            <div className=\"container box columns\">\n                <div className=\"column\">\n                    <ol className=\"list\">\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker} /></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        <li><input type=\"text\" className=\"input  is-success is-normal is-rounded\" /> <input className=\"checkbox\" type=\"checkbox\" onChange={setChecker}/></li>\n                        \n                    </ol>\n                </div>\n                <div className=\"column\">\n                        <h1>Describe your skill</h1>\n                        <div class=\"control\">\n                            <textarea class=\"textarea\" placeholder=\"Skill Description\"></textarea>\n                        </div>\n                        <button class=\"button is-success\"   >Save</button>\n                </div>\n\n               \n            \n            </div>\n        </div>\n    )\n}\n\nexport default EditSkill;","import React from 'react';\nimport { useHistory } from 'react-router';\nimport './index.scss';\n\nfunction Login(){\n    const history = useHistory();\n    const goToHome = () =>{\n        history.push('/homepage')\n    }\n    return(<div>\n\n\n<section class=\"hero is-primary is-fullheight\">\n  <div class=\"hero-body\">\n    <div class=\"container\">\n      <div class=\"columns is-centered\">\n        <div class=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n          <form action=\"\" class=\"box\">\n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Email</label>\n              <div class=\"control has-icons-left\">\n                <input type=\"email\" placeholder=\"e.g. bobsmith@gmail.com\" class=\"input\" required/>\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-envelope\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label for=\"\" class=\"label\">Password</label>\n              <div class=\"control has-icons-left\">\n                <input type=\"password\" placeholder=\"*******\" class=\"input\" required/>\n                <span class=\"icon is-small is-left\">\n                  <i class=\"fa fa-lock\"></i>\n                </span>\n              </div>\n            </div>\n            <div class=\"field\">\n              <label for=\"\" class=\"checkbox\">\n                <input type=\"checkbox\"/>\n               Remember me\n              </label>\n            </div>\n            <div class=\"field\">\n              <button class=\"button is-success\" onClick={goToHome}>\n                Login\n              </button>\n            </div>\n          </form>\n        </div>\n      </div>\n    </div>\n  </div>\n</section>\n    </div>)\n}\n\nexport default Login;","import React, {Component} from 'react' \nimport './App.scss';\nimport HomePage from './components/HomePage';\nimport EditSkill from './components/EditSkill';\nimport {BrowserRouter,Switch , Route} from 'react-router-dom'\nimport Login from './components/Login';\nclass App extends Component {\n \n  render(){\n    return (\n        <BrowserRouter>\n          <Switch>\n            <Route exact path=\"/\" component={Login}/>\n            <Route exact path='/homepage' component={HomePage}/>\n            <Route exact path='/edit' component={EditSkill}/>\n          </Switch>\n        </BrowserRouter>\n      \n  \n      \n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}